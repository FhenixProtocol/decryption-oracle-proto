syntax = "proto3";

package oracle;

option go_package = "go/oracle";

// The decryption oracle service definition.
service DecryptionOracle {
  // Sends a greeting
  rpc Decrypt (DecryptRequest) returns (DecryptResponse) {}
  rpc Reencrypt (ReencryptRequest) returns (ReencryptResponse) {}
  rpc AssertIsNil (IsNilRequest) returns (IsNilResponse) {}
}

// The request message containing hex encoded encrypted number
// and a currently used field with some proof (for future use)
message IsNilRequest {
  string encrypted = 1;
  string proof = 2;
}

// The request message containing hex encoded encrypted number
// and the public key of the requesting user (also hex encoded)
// and a currently used field with some proof (for future use)
message ReencryptRequest {
  string encrypted = 1;
  string user_public_key = 2;
  string proof = 3;
}

// The request message containing hex encoded encrypted number
// and a currently used field with some proof (for future use)
message DecryptRequest {
  string encrypted = 1;
  string proof = 2;
}

// The response message containing the greetings
message DecryptResponse {
  string decrypted = 1;
  string signature = 2;
}

// The response message containing the result whether or not the
// assertion requested was nil
message IsNilResponse {
  bool is_nil = 1;
  string signature = 2;
}

// The response message containing a hex encoded reencrypted number
message ReencryptResponse {
  string reencrypted = 1;
  string signature = 2;
}
